<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
    xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
        http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
    
    <!-- Root Context: defines shared resources visible to all other web components -->
    <context:property-placeholder location="classpath:database/jdbc.properties"></context:property-placeholder>
    
    <!-- DI로 spring에게 DataSource(Connection Pool) 를 만들어 달라고 설정 xml -->
    <bean id="dataSource" class="org.apache.commons.dbcp2.BasicDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"></property>
        <property name="url" value="${jdbc.url}"></property>
        <property name="username" value="${jdbc.username}"></property>
        <property name="password" value="${jdbc.password}"></property>
    </bean>
    
    <!-- mybatis가 sql을 실행하고 java와 연동하는 주체인 SqlSession 객체를 관리하는 sqlSessionFactory bean에 대한 DI -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="configLocation" value="classpath:config/mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath:mapper/*.xml" />
    </bean>
    
    <!-- mybatis가 대상이 되는 dao interface를 찾기 위한 scan 설정. @Mapper를 찾음 -->
    <!-- Mybatis 설정 후 오류가 생긴다면 maven -> update -->
    <mybatis-spring:scan base-package="com.mtcom.myboard.dao" annotation="org.apache.ibatis.annotations.Mapper"/>

    <!-- root-context.xml에서 설정/확인된 @Transactional 데이터를 servlet-context.xml에서 다시 scan해서 잃어버리지 않도록
         패키지를 분리 -->
    <context:component-scan base-package="com.mtcom.myboard.service, com.mtcom.myboard.dao"/>
    <context:component-scan base-package="com.mtcom.myboard.aspect"/>

    <!-- AOP -->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>
    
    <!-- 트랜잭션 설정 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    
    <tx:annotation-driven></tx:annotation-driven>
    
</beans>